<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		DATASOURCE DEFINITIONS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<bean id="aplicacion" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${aplicacion.driverClassName}" />
		<property name="jdbcUrl" value="${aplicacion.url}" />
		<property name="user" value="${aplicacion.username}" />
		<property name="password" value="${aplicacion.password}" />
		<property name="acquireIncrement" value="${aplicacion.acquireIncrement}" />
		<property name="minPoolSize" value="${aplicacion.minPoolSize}" />
		<property name="maxPoolSize" value="${aplicacion.maxPoolSize}" />
		<property name="acquireRetryAttempts" value="${aplicacion.acquireRetryAttempts}" />
		<property name="maxIdleTime" value="50" />
		<property name="idleConnectionTestPeriod" value="30" />
		<property name="autoCommitOnClose" value="false" />
		<property name="numHelperThreads" value="10" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="aplicacion" />
		<property name="typeAliasesPackage" value="org.jlobato.gpro.dao.mybatis.model" />
		<property name="mapperLocations"
			value="classpath*:org/jlobato/gpro/dao/mybatis/sqlmap/**/*.xml" />
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.jlobato.gpro.dao.mybatis.mappers" />
	</bean>
	
	<bean class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate" id="namedParameterJdbcTemplate">
		<constructor-arg ref="aplicacion" />
	</bean>
		
	<bean class="org.springframework.jdbc.core.JdbcTemplate" id="jdbcTemplate">
		<constructor-arg ref="aplicacion" />
		<property name="resultsMapCaseInsensitive" value="true" />
	</bean>	

	<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		Transaction manager ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="aplicacion" />
	</bean>

	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean
		below) -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<!-- all methods starting with 'get' are read-only -->
			<tx:method name="get*" read-only="true" />
			<tx:method name="is*" read-only="true" />
			<!-- other methods use the default transaction settings (see below) -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>
	<!-- ensure that the above transactional advice runs for any execution of
		an operation defined by the fachadaServiceExecution interface -->
	<aop:config>
		<aop:pointcut id="fachadaServiceExecution"
			expression="execution(* org.jlobato.gpro.services.mybatis.facade.Fachada*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="fachadaServiceExecution" />
	</aop:config>

</beans>
